{"version":3,"file":"static/js/2507.8d67f2dd.chunk.js","mappings":"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","sources":["components/Liquidity/PositionNFT.tsx","components/Toggle/MultiToggle.tsx","components/RateToggle.tsx","hooks/usePositionTokenURI.ts","hooks/useV3PositionFees.ts","hooks/useV3Positions.ts","pages/LegacyPool/PositionPage.tsx"],"sourcesContent":["\"use strict\";\nimport { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nfunction getSnapshot(src, canvas, targetHeight) {\n  const context = canvas.getContext(\"2d\");\n  if (context) {\n    let { width, height } = src;\n    const ratio = width / height;\n    height = targetHeight;\n    width = Math.round(ratio * targetHeight);\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n    canvas.style.width = width + \"px\";\n    canvas.style.height = height + \"px\";\n    context.scale(devicePixelRatio, devicePixelRatio);\n    context.clearRect(0, 0, width, height);\n    context.drawImage(src, 0, 0, width, height);\n  }\n}\nconst NFTGrid = styled.div`\n  display: grid;\n  grid-template: 'overlap';\n  min-height: 400px;\n`;\nconst NFTCanvas = styled.canvas`\n  grid-area: overlap;\n`;\nconst NFTImage = styled.img`\n  grid-area: overlap;\n  height: 400px;\n  /* Ensures SVG appears on top of canvas. */\n  z-index: 1;\n`;\nexport function PositionNFT({ image, height: targetHeight }) {\n  const [animate, setAnimate] = useState(false);\n  const canvasRef = useRef(null);\n  const imageRef = useRef(null);\n  return <NFTGrid\n    onMouseEnter={() => {\n      setAnimate(true);\n    }}\n    onMouseLeave={() => {\n      if (imageRef.current && canvasRef.current) {\n        getSnapshot(imageRef.current, canvasRef.current, targetHeight);\n      }\n      setAnimate(false);\n    }}\n  ><NFTCanvas ref={canvasRef} /><NFTImage\n    ref={imageRef}\n    src={image}\n    hidden={!animate}\n    onLoad={() => {\n      if (imageRef.current && canvasRef.current) {\n        getSnapshot(imageRef.current, canvasRef.current, targetHeight);\n      }\n    }}\n  /></NFTGrid>;\n}\n","\"use strict\";\nimport styled from \"lib/styled-components\";\nexport const ToggleWrapper = styled.button`\n  display: flex;\n  align-items: center;\n  width: ${({ width }) => width ?? \"100%\"};\n  padding: 1px;\n  background: ${({ theme }) => theme.surface2};\n  border-radius: 8px;\n  border: ${({ theme }) => \"1px solid \" + theme.surface3};\n  cursor: pointer;\n  outline: none;\n`;\nexport const ToggleElement = styled.span`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 4px 0.5rem;\n  border-radius: 6px;\n  justify-content: center;\n  height: 100%;\n  background: ${({ theme, isActive }) => isActive ? theme.surface1 : \"none\"};\n  color: ${({ theme, isActive }) => isActive ? theme.neutral1 : theme.neutral3};\n  font-size: ${({ fontSize }) => fontSize ?? \"1rem\"};\n  font-weight: 535;\n  white-space: nowrap;\n  :hover {\n    user-select: initial;\n    color: ${({ theme, isActive }) => isActive ? theme.neutral2 : theme.neutral3};\n  }\n`;\n","\"use strict\";\nimport { ToggleElement, ToggleWrapper } from \"components/Toggle/MultiToggle\";\nexport default function RateToggle({\n  currencyA,\n  currencyB,\n  handleRateToggle\n}) {\n  const tokenA = currencyA?.wrapped;\n  const tokenB = currencyB?.wrapped;\n  const isSorted = tokenA && tokenB && tokenA.sortsBefore(tokenB);\n  return tokenA && tokenB ? <div style={{ width: \"fit-content\", display: \"flex\", alignItems: \"center\" }} onClick={handleRateToggle}><ToggleWrapper width=\"fit-content\"><ToggleElement isActive={isSorted} fontSize=\"12px\">{isSorted ? currencyA.symbol : currencyB.symbol}</ToggleElement><ToggleElement isActive={!isSorted} fontSize=\"12px\">{isSorted ? currencyB.symbol : currencyA.symbol}</ToggleElement></ToggleWrapper></div> : null;\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { useV3NFTPositionManagerContract, useV4NFTPositionManagerContract } from \"hooks/useContract\";\nimport { useMemo } from \"react\";\nconst STARTS_WITH = \"data:application/json;base64,\";\nfunction useNFTPositionManagerContract(version, chainId) {\n  const v3Contract = useV3NFTPositionManagerContract(false, chainId);\n  const v4Contract = useV4NFTPositionManagerContract(false, chainId);\n  return version === ProtocolVersion.V3 ? v3Contract : v4Contract;\n}\nexport function usePositionTokenURI(tokenId, chainId, version) {\n  const contract = useNFTPositionManagerContract(version ?? ProtocolVersion.V3, chainId);\n  const { data, isLoading, error } = useQuery({\n    queryKey: [\"PositionTokenURI\", tokenId, chainId, version],\n    queryFn: async () => {\n      const input = tokenId instanceof BigNumber ? tokenId.toHexString() : tokenId?.toString(16);\n      if (!input) {\n        return null;\n      }\n      return await contract?.tokenURI(input);\n    }\n  });\n  return useMemo(() => {\n    if (error || !tokenId) {\n      return {\n        valid: false,\n        loading: false\n      };\n    }\n    if (isLoading) {\n      return {\n        valid: true,\n        loading: true\n      };\n    }\n    if (!data) {\n      return {\n        valid: false,\n        loading: false\n      };\n    }\n    if (!data || !data.startsWith(STARTS_WITH)) {\n      return {\n        valid: false,\n        loading: false\n      };\n    }\n    try {\n      const json = JSON.parse(atob(data.slice(STARTS_WITH.length)));\n      return {\n        valid: true,\n        loading: false,\n        result: json\n      };\n    } catch (error2) {\n      return { valid: false, loading: false };\n    }\n  }, [error, isLoading, data, tokenId]);\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { useV3NFTPositionManagerContract } from \"hooks/useContract\";\nimport { useSingleCallResult } from \"lib/hooks/multicall\";\nimport useBlockNumber from \"lib/hooks/useBlockNumber\";\nimport { useEffect, useState } from \"react\";\nimport { unwrappedToken } from \"utils/unwrappedToken\";\nconst MAX_UINT128 = BigNumber.from(2).pow(128).sub(1);\nexport function useV3PositionFees(pool, tokenId, asWETH = false) {\n  const positionManager = useV3NFTPositionManagerContract(false);\n  const owner = useSingleCallResult(tokenId ? positionManager : null, \"ownerOf\", [tokenId]).result?.[0];\n  const tokenIdHexString = tokenId?.toHexString();\n  const latestBlockNumber = useBlockNumber();\n  const [amounts, setAmounts] = useState();\n  useEffect(() => {\n    ;\n    (async function getFees() {\n      if (positionManager && tokenIdHexString && owner) {\n        try {\n          const results = await positionManager.callStatic.collect(\n            {\n              tokenId: tokenIdHexString,\n              recipient: owner,\n              // some tokens might fail if transferred to address(0)\n              amount0Max: MAX_UINT128,\n              amount1Max: MAX_UINT128\n            },\n            { from: owner }\n            // need to simulate the call as the owner\n          );\n          setAmounts([results.amount0, results.amount1]);\n        } catch {\n        }\n      }\n    })();\n  }, [positionManager, tokenIdHexString, owner, latestBlockNumber]);\n  if (pool && amounts) {\n    return [\n      CurrencyAmount.fromRawAmount(asWETH ? pool.token0 : unwrappedToken(pool.token0), amounts[0].toString()),\n      CurrencyAmount.fromRawAmount(asWETH ? pool.token1 : unwrappedToken(pool.token1), amounts[1].toString())\n    ];\n  } else {\n    return [void 0, void 0];\n  }\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { useV3NFTPositionManagerContract } from \"hooks/useContract\";\nimport { useSingleCallResult, useSingleContractMultipleData } from \"lib/hooks/multicall\";\nimport { useMemo } from \"react\";\nfunction useV3PositionsFromTokenIds(tokenIds) {\n  const positionManager = useV3NFTPositionManagerContract();\n  const inputs = useMemo(() => tokenIds ? tokenIds.map((tokenId) => [BigNumber.from(tokenId)]) : [], [tokenIds]);\n  const results = useSingleContractMultipleData(positionManager, \"positions\", inputs);\n  const loading = useMemo(() => results.some(({ loading: loading2 }) => loading2), [results]);\n  const error = useMemo(() => results.some(({ error: error2 }) => error2), [results]);\n  const positions = useMemo(() => {\n    if (!loading && !error && tokenIds) {\n      return results.map((call, i) => {\n        const tokenId = tokenIds[i];\n        const result = call.result;\n        return {\n          tokenId,\n          fee: result.fee,\n          feeGrowthInside0LastX128: result.feeGrowthInside0LastX128,\n          feeGrowthInside1LastX128: result.feeGrowthInside1LastX128,\n          liquidity: result.liquidity,\n          nonce: result.nonce,\n          operator: result.operator,\n          tickLower: result.tickLower,\n          tickUpper: result.tickUpper,\n          token0: result.token0,\n          token1: result.token1,\n          tokensOwed0: result.tokensOwed0,\n          tokensOwed1: result.tokensOwed1\n        };\n      });\n    }\n    return void 0;\n  }, [loading, error, results, tokenIds]);\n  return {\n    loading,\n    positions: positions?.map((position, i) => ({ ...position, tokenId: inputs[i][0] }))\n  };\n}\nexport function useV3PositionFromTokenId(tokenId) {\n  const position = useV3PositionsFromTokenIds(tokenId ? [tokenId] : void 0);\n  return {\n    loading: position.loading,\n    position: position.positions?.[0]\n  };\n}\nexport function useV3Positions(account) {\n  const positionManager = useV3NFTPositionManagerContract();\n  const { loading: balanceLoading, result: balanceResult } = useSingleCallResult(positionManager, \"balanceOf\", [\n    account ?? void 0\n  ]);\n  const accountBalance = balanceResult?.[0]?.toNumber();\n  const tokenIdsArgs = useMemo(() => {\n    if (accountBalance && account) {\n      const tokenRequests = [];\n      for (let i = 0; i < accountBalance; i++) {\n        tokenRequests.push([account, i]);\n      }\n      return tokenRequests;\n    }\n    return [];\n  }, [account, accountBalance]);\n  const tokenIdResults = useSingleContractMultipleData(positionManager, \"tokenOfOwnerByIndex\", tokenIdsArgs);\n  const someTokenIdsLoading = useMemo(() => tokenIdResults.some(({ loading }) => loading), [tokenIdResults]);\n  const tokenIds = useMemo(() => {\n    if (account) {\n      return tokenIdResults.map(({ result }) => result).filter((result) => !!result).map((result) => BigNumber.from(result[0]));\n    }\n    return [];\n  }, [account, tokenIdResults]);\n  const { positions, loading: positionsLoading } = useV3PositionsFromTokenIds(tokenIds);\n  return {\n    loading: someTokenIdsLoading || balanceLoading || positionsLoading,\n    positions\n  };\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { InterfacePageName, LiquidityEventName } from \"@uniswap/analytics-events\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { CurrencyAmount, Fraction, Percent } from \"@uniswap/sdk-core\";\nimport { NonfungiblePositionManager, Pool, Position } from \"@uniswap/v3-sdk\";\nimport Badge from \"components/Badge/Badge\";\nimport RangeBadge from \"components/Badge/RangeBadge\";\nimport { ButtonConfirmed, ButtonGray, ButtonPrimary, SmallButtonPrimary } from \"components/Button/buttons\";\nimport { DarkCard, LightCard } from \"components/Card/cards\";\nimport { PositionNFT } from \"components/Liquidity/PositionNFT\";\nimport { getLPBaseAnalyticsProperties } from \"components/Liquidity/analytics\";\nimport { LoadingFullscreen } from \"components/Loader/styled\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { DoubleCurrencyLogo } from \"components/Logo/DoubleLogo\";\nimport { getPriceOrderingFromPositionForUI } from \"components/PositionListItem\";\nimport RateToggle from \"components/RateToggle\";\nimport { SwitchLocaleLink } from \"components/SwitchLocaleLink\";\nimport TransactionConfirmationModal, { ConfirmationModalContent } from \"components/TransactionConfirmationModal\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport { RowBetween, RowFixed } from \"components/deprecated/Row\";\nimport { Dots } from \"components/swap/styled\";\nimport { getPoolDetailsURL, getTokenDetailsURL, isGqlSupportedChain } from \"graphql/data/util\";\nimport { useToken } from \"hooks/Tokens\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useV3NFTPositionManagerContract } from \"hooks/useContract\";\nimport { useEthersSigner } from \"hooks/useEthersSigner\";\nimport useIsTickAtLimit from \"hooks/useIsTickAtLimit\";\nimport { PoolState, usePool } from \"hooks/usePools\";\nimport { usePositionTokenURI } from \"hooks/usePositionTokenURI\";\nimport { useV3PositionFees } from \"hooks/useV3PositionFees\";\nimport { useV3PositionFromTokenId } from \"hooks/useV3Positions\";\nimport { useSingleCallResult } from \"lib/hooks/multicall\";\nimport useNativeCurrency from \"lib/hooks/useNativeCurrency\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { LoadingRows } from \"pages/LegacyPool/styled\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { Helmet } from \"react-helmet-async/lib/index\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Bound } from \"state/mint/v3/actions\";\nimport { useIsTransactionPending, useTransactionAdder } from \"state/transactions/hooks\";\nimport { TransactionType } from \"state/transactions/types\";\nimport { ClickableStyle, ExternalLink, HideExtraSmall, HideSmall, StyledRouterLink, ThemedText } from \"theme/components\";\nimport { Switch, Text } from \"ui/src\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { useIsSupportedChainId, useSupportedChainId } from \"uniswap/src/features/chains/hooks/useSupportedChainId\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { sendAnalyticsEvent } from \"uniswap/src/features/telemetry/send\";\nimport { useUSDCPrice } from \"uniswap/src/features/transactions/swap/hooks/useUSDCPrice\";\nimport { Trans, t } from \"uniswap/src/i18n\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { logger } from \"utilities/src/logger/logger\";\nimport { useTrace } from \"utilities/src/telemetry/trace/TraceContext\";\nimport { calculateGasMargin } from \"utils/calculateGasMargin\";\nimport { currencyId } from \"utils/currencyId\";\nimport { WrongChainError } from \"utils/errors\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nimport { unwrappedToken } from \"utils/unwrappedToken\";\nconst PositionPageButtonPrimary = styled(ButtonPrimary)`\n  width: 228px;\n  height: 40px;\n  font-size: 16px;\n  line-height: 20px;\n  border-radius: 12px;\n`;\nconst PageWrapper = styled.div`\n  padding: 68px 16px 16px 16px;\n\n  min-width: 800px;\n  max-width: 960px;\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\n    min-width: 100%;\n    padding: 16px;\n  }\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    min-width: 100%;\n    padding: 16px;\n  }\n`;\nconst BadgeText = styled.div`\n  font-weight: 535;\n  font-size: 14px;\n  color: ${({ theme }) => theme.neutral2};\n`;\nconst Label = styled(({ end, ...props }) => <ThemedText.DeprecatedLabel {...props} />)`\n  display: flex;\n  font-size: 16px;\n  justify-content: ${({ end }) => end ? \"flex-end\" : \"flex-start\"};\n  align-items: center;\n`;\nconst ExtentsText = styled.span`\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 14px;\n  text-align: center;\n  margin-right: 4px;\n  font-weight: 535;\n`;\nconst HoverText = styled(ThemedText.DeprecatedMain)`\n  text-decoration: none;\n  color: ${({ theme }) => theme.neutral2};\n  :hover {\n    color: ${({ theme }) => theme.neutral1};\n    text-decoration: none;\n  }\n`;\nconst DoubleArrow = styled.span`\n  color: ${({ theme }) => theme.neutral3};\n  margin: 0 1rem;\n`;\nconst ResponsiveRow = styled(RowBetween)`\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    flex-direction: column;\n    align-items: flex-start;\n    row-gap: 16px;\n    width: 100%;\n  }\n`;\nconst ActionButtonResponsiveRow = styled(ResponsiveRow)`\n  width: 50%;\n  justify-content: flex-end;\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    width: 100%;\n    flex-direction: row;\n    * {\n      width: 100%;\n    }\n  }\n`;\nconst ResponsiveButtonConfirmed = styled(ButtonConfirmed)`\n  border-radius: 12px;\n  padding: 6px 8px;\n  width: fit-content;\n  font-size: 16px;\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\n    width: fit-content;\n  }\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    width: fit-content;\n  }\n`;\nconst StyledPoolLink = styled(Link)`\n  text-decoration: none;\n  ${ClickableStyle}\n`;\nconst PairHeader = styled(ThemedText.H1Medium)`\n  margin-right: 10px;\n`;\nfunction CurrentPriceCard({\n  inverted,\n  pool,\n  currencyQuote,\n  currencyBase\n}) {\n  const { formatPrice } = useFormatter();\n  if (!pool || !currencyQuote || !currencyBase) {\n    return null;\n  }\n  return <LightCard padding=\"12px\"><AutoColumn gap=\"sm\" justify=\"center\"><ExtentsText><Trans i18nKey=\"common.currentPrice\" /></ExtentsText><ThemedText.DeprecatedMediumHeader textAlign=\"center\">{formatPrice({ price: inverted ? pool.token1Price : pool.token0Price, type: NumberType.TokenTx })}</ThemedText.DeprecatedMediumHeader><ExtentsText><Trans\n    i18nKey=\"common.feesEarnedPerBase\"\n    values={{ symbolA: currencyQuote?.symbol, symbolB: currencyBase?.symbol }}\n  /></ExtentsText></AutoColumn></LightCard>;\n}\nconst TokenLink = ({\n  children,\n  chainId,\n  address\n}) => {\n  const tokenLink = getTokenDetailsURL({ address, chain: toGraphQLChain(chainId) });\n  return <StyledRouterLink to={tokenLink}>{children}</StyledRouterLink>;\n};\nconst ExternalTokenLink = ({ children, chainId, address }) => {\n  return <ExternalLink href={getExplorerLink(chainId, address, ExplorerDataType.TOKEN)}>{children}</ExternalLink>;\n};\nfunction LinkedCurrency({ chainId, currency }) {\n  const address = currency?.address;\n  const supportedChain = useSupportedChainId(chainId);\n  const Link2 = isGqlSupportedChain(supportedChain) ? TokenLink : ExternalTokenLink;\n  return <Link2 chainId={chainId} address={address}><RowFixed><CurrencyLogo currency={currency} size={20} style={{ marginRight: \"0.5rem\" }} /><ThemedText.DeprecatedMain>{currency?.symbol} ↗</ThemedText.DeprecatedMain></RowFixed></Link2>;\n}\nfunction getRatio(lower, current, upper) {\n  try {\n    if (!current.greaterThan(lower)) {\n      return 100;\n    } else if (!current.lessThan(upper)) {\n      return 0;\n    }\n    const a = Number.parseFloat(lower.toSignificant(15));\n    const b = Number.parseFloat(upper.toSignificant(15));\n    const c = Number.parseFloat(current.toSignificant(15));\n    const ratio = Math.floor(1 / ((Math.sqrt(a * b) - Math.sqrt(b * c)) / (c - Math.sqrt(b * c)) + 1) * 100);\n    if (ratio < 0 || ratio > 100) {\n      throw Error(\"Out of range\");\n    }\n    return ratio;\n  } catch {\n    return void 0;\n  }\n}\nconst useInverter = ({\n  priceLower,\n  priceUpper,\n  quote,\n  base,\n  invert\n}) => {\n  return {\n    priceUpper: invert ? priceLower?.invert() : priceUpper,\n    priceLower: invert ? priceUpper?.invert() : priceLower,\n    quote: invert ? base : quote,\n    base: invert ? quote : base\n  };\n};\nexport function PositionPageUnsupportedContent() {\n  return <PageWrapper><div style={{ display: \"flex\", alignItems: \"center\", flexDirection: \"column\" }}><ThemedText.HeadlineLarge style={{ marginBottom: \"8px\" }}><Trans i18nKey=\"common.positionUnavailable\">Position unavailable</Trans></ThemedText.HeadlineLarge><ThemedText.BodyPrimary style={{ marginBottom: \"32px\" }}><Trans i18nKey=\"pool.position.networkConnect\" /></ThemedText.BodyPrimary><PositionPageButtonPrimary as={Link} to=\"/pool\" width=\"fit-content\"><Trans i18nKey=\"pool.back\" /></PositionPageButtonPrimary></div></PageWrapper>;\n}\nexport default function PositionPage() {\n  const { chainId } = useAccount();\n  const isSupportedChain = useIsSupportedChainId(chainId);\n  if (isSupportedChain) {\n    return <PositionPageContent />;\n  } else {\n    return <PositionPageUnsupportedContent />;\n  }\n}\nconst PositionLabelRow = styled(RowFixed)({\n  flexWrap: \"wrap\",\n  gap: 8\n});\nfunction parseTokenId(tokenId) {\n  if (!tokenId) {\n    return void 0;\n  }\n  try {\n    return BigNumber.from(tokenId);\n  } catch (error) {\n    return void 0;\n  }\n}\nfunction PositionPageContent() {\n  const trace = useTrace();\n  const { tokenId: tokenIdFromUrl } = useParams();\n  const account = useAccount();\n  const supportedChain = useSupportedChainId(account.chainId);\n  const signer = useEthersSigner();\n  const theme = useTheme();\n  const { formatCurrencyAmount, formatDelta, formatTickPrice } = useFormatter();\n  const { defaultChainId } = useEnabledChains();\n  const parsedTokenId = parseTokenId(tokenIdFromUrl);\n  const { loading, position: positionDetails } = useV3PositionFromTokenId(parsedTokenId);\n  const {\n    token0: token0Address,\n    token1: token1Address,\n    fee: feeAmount,\n    liquidity,\n    tickLower,\n    tickUpper,\n    tokenId\n  } = positionDetails || {};\n  const removed = liquidity?.eq(0);\n  const metadata = usePositionTokenURI(parsedTokenId);\n  const token0 = useToken(token0Address);\n  const token1 = useToken(token1Address);\n  const currency0 = token0 ? unwrappedToken(token0) : void 0;\n  const currency1 = token1 ? unwrappedToken(token1) : void 0;\n  const [receiveWETH, setReceiveWETH] = useState(false);\n  const nativeCurrency = useNativeCurrency(supportedChain);\n  const nativeWrappedSymbol = nativeCurrency.wrapped.symbol;\n  const poolAddress = token0 && token1 && feeAmount ? Pool.getAddress(token0, token1, feeAmount) : void 0;\n  const [poolState, pool] = usePool(token0 ?? void 0, token1 ?? void 0, feeAmount);\n  const position = useMemo(() => {\n    if (pool && liquidity && typeof tickLower === \"number\" && typeof tickUpper === \"number\") {\n      return new Position({ pool, liquidity: liquidity.toString(), tickLower, tickUpper });\n    }\n    return void 0;\n  }, [liquidity, pool, tickLower, tickUpper]);\n  const tickAtLimit = useIsTickAtLimit(feeAmount, tickLower, tickUpper);\n  const pricesFromPosition = getPriceOrderingFromPositionForUI(position);\n  const [manuallyInverted, setManuallyInverted] = useState(false);\n  const { priceLower, priceUpper, base } = useInverter({\n    priceLower: pricesFromPosition.priceLower,\n    priceUpper: pricesFromPosition.priceUpper,\n    quote: pricesFromPosition.quote,\n    base: pricesFromPosition.base,\n    invert: manuallyInverted\n  });\n  const inverted = token1 ? base?.equals(token1) : void 0;\n  const currencyQuote = inverted ? currency0 : currency1;\n  const currencyBase = inverted ? currency1 : currency0;\n  const ratio = useMemo(() => {\n    return priceLower && pool && priceUpper ? getRatio(\n      inverted ? priceUpper.invert() : priceLower,\n      pool.token0Price,\n      inverted ? priceLower.invert() : priceUpper\n    ) : void 0;\n  }, [inverted, pool, priceLower, priceUpper]);\n  const [feeValue0, feeValue1] = useV3PositionFees(pool ?? void 0, positionDetails?.tokenId, receiveWETH);\n  const currency0ForFeeCollectionPurposes = pool ? receiveWETH ? pool.token0 : unwrappedToken(pool.token0) : void 0;\n  const currency1ForFeeCollectionPurposes = pool ? receiveWETH ? pool.token1 : unwrappedToken(pool.token1) : void 0;\n  const [collecting, setCollecting] = useState(false);\n  const [collectMigrationHash, setCollectMigrationHash] = useState(null);\n  const isCollectPending = useIsTransactionPending(collectMigrationHash ?? void 0);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const { price: price0 } = useUSDCPrice(token0 ?? void 0);\n  const { price: price1 } = useUSDCPrice(token1 ?? void 0);\n  const fiatValueOfFees = useMemo(() => {\n    if (!price0 || !price1 || !feeValue0 || !feeValue1) {\n      return null;\n    }\n    const feeValue0Wrapped = feeValue0?.wrapped;\n    const feeValue1Wrapped = feeValue1?.wrapped;\n    if (!feeValue0Wrapped || !feeValue1Wrapped) {\n      return null;\n    }\n    const amount0 = price0.quote(feeValue0Wrapped);\n    const amount1 = price1.quote(feeValue1Wrapped);\n    return amount0.add(amount1);\n  }, [price0, price1, feeValue0, feeValue1]);\n  const fiatValueOfLiquidity = useMemo(() => {\n    if (!price0 || !price1 || !position) {\n      return null;\n    }\n    const amount0 = price0.quote(position.amount0);\n    const amount1 = price1.quote(position.amount1);\n    return amount0.add(amount1);\n  }, [price0, price1, position]);\n  const addTransaction = useTransactionAdder();\n  const positionManager = useV3NFTPositionManagerContract();\n  const collect = useCallback(async () => {\n    if (!currency0ForFeeCollectionPurposes || !currency1ForFeeCollectionPurposes || account.status !== \"connected\" || !positionManager || !tokenId || !signer) {\n      return;\n    }\n    setCollecting(true);\n    const { calldata, value } = NonfungiblePositionManager.collectCallParameters({\n      tokenId: tokenId.toString(),\n      expectedCurrencyOwed0: feeValue0 ?? CurrencyAmount.fromRawAmount(currency0ForFeeCollectionPurposes, 0),\n      expectedCurrencyOwed1: feeValue1 ?? CurrencyAmount.fromRawAmount(currency1ForFeeCollectionPurposes, 0),\n      recipient: account.address\n    });\n    const txn = {\n      to: positionManager.address,\n      data: calldata,\n      value\n    };\n    const connectedChainId = await signer.getChainId();\n    if (account.chainId !== connectedChainId) {\n      throw new WrongChainError();\n    }\n    signer.estimateGas(txn).then((estimate) => {\n      const newTxn = {\n        ...txn,\n        gasLimit: calculateGasMargin(estimate)\n      };\n      return signer.sendTransaction(newTxn).then((response) => {\n        setCollectMigrationHash(response.hash);\n        setCollecting(false);\n        sendAnalyticsEvent(LiquidityEventName.COLLECT_LIQUIDITY_SUBMITTED, {\n          transaction_hash: response.hash,\n          ...getLPBaseAnalyticsProperties({\n            trace,\n            fee: feeAmount,\n            currency0: currency0ForFeeCollectionPurposes,\n            currency1: currency1ForFeeCollectionPurposes,\n            version: ProtocolVersion.V3,\n            poolId: poolAddress,\n            chainId: account.chainId,\n            currency0AmountUsd: feeValue0 ?? CurrencyAmount.fromRawAmount(currency0ForFeeCollectionPurposes, 0),\n            currency1AmountUsd: feeValue1 ?? CurrencyAmount.fromRawAmount(currency1ForFeeCollectionPurposes, 0)\n          })\n        });\n        addTransaction(response, {\n          type: TransactionType.COLLECT_FEES,\n          currencyId0: currencyId(currency0ForFeeCollectionPurposes),\n          currencyId1: currencyId(currency1ForFeeCollectionPurposes),\n          expectedCurrencyOwed0: feeValue0?.quotient.toString() ?? CurrencyAmount.fromRawAmount(currency0ForFeeCollectionPurposes, 0).toExact(),\n          expectedCurrencyOwed1: feeValue1?.quotient.toString() ?? CurrencyAmount.fromRawAmount(currency1ForFeeCollectionPurposes, 0).toExact()\n        });\n      });\n    }).catch((error) => {\n      setCollecting(false);\n      logger.error(error, {\n        tags: {\n          file: \"PositionPage\",\n          function: \"collectCallback\"\n        }\n      });\n    });\n  }, [\n    currency0ForFeeCollectionPurposes,\n    currency1ForFeeCollectionPurposes,\n    account.status,\n    account.address,\n    account.chainId,\n    positionManager,\n    tokenId,\n    signer,\n    feeValue0,\n    feeValue1,\n    trace,\n    feeAmount,\n    poolAddress,\n    addTransaction\n  ]);\n  const owner = useSingleCallResult(tokenId ? positionManager : null, \"ownerOf\", [tokenId]).result?.[0];\n  const ownsNFT = owner === account.address || positionDetails?.operator === account.address;\n  const feeValueUpper = inverted ? feeValue0 : feeValue1;\n  const feeValueLower = inverted ? feeValue1 : feeValue0;\n  const below = pool && typeof tickLower === \"number\" ? pool.tickCurrent < tickLower : void 0;\n  const above = pool && typeof tickUpper === \"number\" ? pool.tickCurrent >= tickUpper : void 0;\n  const inRange = typeof below === \"boolean\" && typeof above === \"boolean\" ? !below && !above : false;\n  function modalHeader() {\n    return <AutoColumn gap=\"md\" style={{ marginTop: \"20px\" }}><LightCard padding=\"12px 16px\"><AutoColumn gap=\"md\"><RowBetween><RowFixed><CurrencyLogo currency={feeValueUpper?.currency} size={20} style={{ marginRight: \"0.5rem\" }} /><ThemedText.DeprecatedMain>{feeValueUpper ? formatCurrencyAmount({ amount: feeValueUpper }) : \"-\"}</ThemedText.DeprecatedMain></RowFixed><ThemedText.DeprecatedMain>{feeValueUpper?.currency?.symbol}</ThemedText.DeprecatedMain></RowBetween><RowBetween><RowFixed><CurrencyLogo currency={feeValueLower?.currency} size={20} style={{ marginRight: \"0.5rem\" }} /><ThemedText.DeprecatedMain>{feeValueLower ? formatCurrencyAmount({ amount: feeValueLower }) : \"-\"}</ThemedText.DeprecatedMain></RowFixed><ThemedText.DeprecatedMain>{feeValueLower?.currency?.symbol}</ThemedText.DeprecatedMain></RowBetween></AutoColumn></LightCard><Text fontSize={12} fontStyle=\"italic\" color=\"$neutral2\"><Trans i18nKey=\"pool.collectingFeesWithdraw\" /></Text><ButtonPrimary data-testid=\"modal-collect-fees-button\" onClick={collect}><Trans i18nKey=\"common.collect.button\" /></ButtonPrimary></AutoColumn>;\n  }\n  const showCollectAsWeth = Boolean(\n    ownsNFT && (feeValue0?.greaterThan(0) || feeValue1?.greaterThan(0)) && currency0 && currency1 && (currency0.isNative || currency1.isNative) && !collectMigrationHash\n  );\n  if (!positionDetails && !loading) {\n    return <PositionPageUnsupportedContent />;\n  }\n  return loading || poolState === PoolState.LOADING || !feeAmount ? <LoadingRows><div /><div /><div /><div /><div /><div /><div /><div /><div /><div /><div /><div /></LoadingRows> : <Trace logImpression page={InterfacePageName.POOL_PAGE}><><Helmet><title>{t(`liquidityPool.positions.page.title`, {\n    quoteSymbol: currencyQuote?.symbol,\n    baseSymbol: currencyBase?.symbol\n  })}</title></Helmet><PageWrapper><TransactionConfirmationModal\n    isOpen={showConfirm}\n    onDismiss={() => setShowConfirm(false)}\n    attemptingTxn={collecting}\n    hash={collectMigrationHash ?? \"\"}\n    reviewContent={() => <ConfirmationModalContent\n      title={<Trans i18nKey=\"pool.collectFees\" />}\n      onDismiss={() => setShowConfirm(false)}\n      topContent={modalHeader}\n    />}\n    pendingText={<Trans i18nKey=\"common.collecting.fees\" />}\n  /><AutoColumn gap=\"md\"><AutoColumn gap=\"sm\"><Link\n    data-cy=\"visit-pool\"\n    style={{ textDecoration: \"none\", width: \"fit-content\", marginBottom: \"0.5rem\" }}\n    to=\"/pool\"\n  ><HoverText>\n                  ← <Trans i18nKey=\"pool.back\" /></HoverText></Link><ResponsiveRow><PositionLabelRow><DoubleCurrencyLogo currencies={[currencyBase, currencyQuote]} size={24} /><StyledPoolLink\n    to={poolAddress ? getPoolDetailsURL(poolAddress, toGraphQLChain(supportedChain ?? defaultChainId)) : \"\"}\n  ><PairHeader>\n                      &nbsp;{currencyQuote?.symbol}&nbsp;/&nbsp;{currencyBase?.symbol}</PairHeader></StyledPoolLink><Badge style={{ marginRight: \"8px\" }}><BadgeText>{formatDelta(parseFloat(new Percent(feeAmount, 1e6).toSignificant()))}</BadgeText></Badge><RangeBadge removed={removed} inRange={inRange} /></PositionLabelRow>{ownsNFT && <ActionButtonResponsiveRow>{currency0 && currency1 && feeAmount && tokenId ? <ButtonGray\n    as={Link}\n    to={`/add/${currencyId(currency0)}/${currencyId(currency1)}/${feeAmount}/${tokenId}`}\n    padding=\"6px 8px\"\n    width=\"fit-content\"\n    $borderRadius=\"12px\"\n    style={{ marginRight: \"8px\" }}\n  ><Trans i18nKey=\"pool.increaseLiquidity\" /></ButtonGray> : null}{tokenId && !removed ? <SmallButtonPrimary\n    as={Link}\n    to={`/remove/${tokenId}`}\n    padding=\"6px 8px\"\n    width=\"fit-content\"\n    $borderRadius=\"12px\"\n  ><Trans i18nKey=\"pool.removeLiquidity\" /></SmallButtonPrimary> : null}</ActionButtonResponsiveRow>}</ResponsiveRow></AutoColumn><ResponsiveRow align=\"flex-start\"><HideSmall\n    style={{\n      height: \"100%\",\n      marginRight: 12\n    }}\n  >{\"result\" in metadata ? <DarkCard\n    width=\"100%\"\n    height=\"100%\"\n    style={{\n      display: \"flex\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      justifyContent: \"space-around\",\n      minWidth: \"340px\"\n    }}\n  ><PositionNFT image={metadata.result.image} height={400} />{typeof account.chainId === \"number\" && owner && !ownsNFT ? <ExternalLink href={getExplorerLink(account.chainId, owner, ExplorerDataType.ADDRESS)}><Trans i18nKey=\"pool.owner\" /></ExternalLink> : null}</DarkCard> : <DarkCard\n    width=\"100%\"\n    height=\"100%\"\n    style={{\n      minWidth: \"340px\",\n      position: \"relative\",\n      overflow: \"hidden\"\n    }}\n  ><LoadingFullscreen /></DarkCard>}</HideSmall><AutoColumn gap=\"sm\" style={{ width: \"100%\", height: \"100%\" }}><DarkCard><AutoColumn gap=\"md\" style={{ width: \"100%\" }}><AutoColumn gap=\"md\"><Label><Trans i18nKey=\"common.liquidity\" /></Label>{fiatValueOfLiquidity?.greaterThan(new Fraction(1, 100)) ? <ThemedText.DeprecatedLargeHeader fontSize=\"36px\" fontWeight={535}>{formatCurrencyAmount({\n    amount: fiatValueOfLiquidity,\n    type: NumberType.FiatTokenPrice\n  })}</ThemedText.DeprecatedLargeHeader> : <ThemedText.DeprecatedLargeHeader color={theme.neutral1} fontSize=\"36px\" fontWeight={535}>\n                          -\n                        </ThemedText.DeprecatedLargeHeader>}</AutoColumn><LightCard padding=\"12px 16px\"><AutoColumn gap=\"md\"><RowBetween><LinkedCurrency\n    chainId={account.chainId ?? UniverseChainId.Mainnet}\n    currency={currencyQuote}\n  /><RowFixed><ThemedText.DeprecatedMain>{formatCurrencyAmount({ amount: inverted ? position?.amount0 : position?.amount1 })}</ThemedText.DeprecatedMain>{typeof ratio === \"number\" && !removed ? <Badge style={{ marginLeft: \"10px\" }}><BadgeText>{inverted ? ratio : 100 - ratio}%</BadgeText></Badge> : null}</RowFixed></RowBetween><RowBetween><LinkedCurrency\n    chainId={account.chainId ?? UniverseChainId.Mainnet}\n    currency={currencyBase}\n  /><RowFixed><ThemedText.DeprecatedMain>{formatCurrencyAmount({ amount: inverted ? position?.amount1 : position?.amount0 })}</ThemedText.DeprecatedMain>{typeof ratio === \"number\" && !removed ? <Badge style={{ marginLeft: \"10px\" }}><BadgeText>{inverted ? 100 - ratio : ratio}%</BadgeText></Badge> : null}</RowFixed></RowBetween></AutoColumn></LightCard></AutoColumn></DarkCard><DarkCard><AutoColumn gap=\"md\" style={{ width: \"100%\" }}><AutoColumn gap=\"md\"><RowBetween style={{ alignItems: \"flex-start\" }}><AutoColumn gap=\"md\"><Label><Trans i18nKey=\"pool.uncollectedFees\" /></Label>{fiatValueOfFees?.greaterThan(new Fraction(1, 100)) ? <ThemedText.DeprecatedLargeHeader color={theme.success} fontSize=\"36px\" fontWeight={535}>{formatCurrencyAmount({ amount: fiatValueOfFees, type: NumberType.FiatTokenPrice })}</ThemedText.DeprecatedLargeHeader> : <ThemedText.DeprecatedLargeHeader color={theme.neutral1} fontSize=\"36px\" fontWeight={535}>\n                              -\n                            </ThemedText.DeprecatedLargeHeader>}</AutoColumn>{ownsNFT && (feeValue0?.greaterThan(0) || feeValue1?.greaterThan(0) || !!collectMigrationHash) ? <ResponsiveButtonConfirmed\n    data-testid=\"collect-fees-button\"\n    disabled={collecting || !!collectMigrationHash}\n    confirmed={!!collectMigrationHash && !isCollectPending}\n    width=\"fit-content\"\n    style={{ borderRadius: \"12px\" }}\n    padding=\"4px 8px\"\n    onClick={() => setShowConfirm(true)}\n  >{!!collectMigrationHash && !isCollectPending ? <ThemedText.DeprecatedMain color={theme.neutral1}><Trans i18nKey=\"pool.collected\" /></ThemedText.DeprecatedMain> : isCollectPending || collecting ? <ThemedText.DeprecatedMain color={theme.neutral1}>{\" \"}<Dots><Trans i18nKey=\"pool.collecting\" /></Dots></ThemedText.DeprecatedMain> : <><ThemedText.DeprecatedMain color={theme.white}><Trans i18nKey=\"pool.collectFees\" /></ThemedText.DeprecatedMain></>}</ResponsiveButtonConfirmed> : null}</RowBetween></AutoColumn><LightCard padding=\"12px 16px\"><AutoColumn gap=\"md\"><RowBetween><RowFixed><CurrencyLogo\n    currency={feeValueUpper?.currency}\n    size={20}\n    style={{ marginRight: \"0.5rem\" }}\n  /><ThemedText.DeprecatedMain>{feeValueUpper?.currency?.symbol}</ThemedText.DeprecatedMain></RowFixed><RowFixed><ThemedText.DeprecatedMain>{feeValueUpper ? formatCurrencyAmount({ amount: feeValueUpper }) : \"-\"}</ThemedText.DeprecatedMain></RowFixed></RowBetween><RowBetween><RowFixed><CurrencyLogo\n    currency={feeValueLower?.currency}\n    size={20}\n    style={{ marginRight: \"0.5rem\" }}\n  /><ThemedText.DeprecatedMain>{feeValueLower?.currency?.symbol}</ThemedText.DeprecatedMain></RowFixed><RowFixed><ThemedText.DeprecatedMain>{feeValueLower ? formatCurrencyAmount({ amount: feeValueLower }) : \"-\"}</ThemedText.DeprecatedMain></RowFixed></RowBetween></AutoColumn></LightCard>{showCollectAsWeth && <AutoColumn gap=\"md\"><RowBetween><ThemedText.DeprecatedMain><Trans i18nKey=\"pool.collectAs\" values={{ nativeWrappedSymbol }} /></ThemedText.DeprecatedMain><Switch\n    id=\"receive-as-weth\"\n    checked={receiveWETH}\n    onCheckedChange={() => setReceiveWETH((receiveWETH2) => !receiveWETH2)}\n    variant=\"branded\"\n  /></RowBetween></AutoColumn>}</AutoColumn></DarkCard></AutoColumn></ResponsiveRow><DarkCard><AutoColumn gap=\"md\"><RowBetween><RowFixed><Label display=\"flex\" style={{ marginRight: \"12px\" }}><Trans i18nKey=\"pool.priceRange\" /></Label><HideExtraSmall><><RangeBadge removed={removed} inRange={inRange} /><span style={{ width: \"8px\" }} /></></HideExtraSmall></RowFixed><RowFixed>{currencyBase && currencyQuote && <RateToggle\n    currencyA={currencyBase}\n    currencyB={currencyQuote}\n    handleRateToggle={() => setManuallyInverted(!manuallyInverted)}\n  />}</RowFixed></RowBetween><RowBetween><LightCard padding=\"12px\" width=\"100%\"><AutoColumn gap=\"sm\" justify=\"center\"><ExtentsText><Trans i18nKey=\"pool.minPrice\" /></ExtentsText><ThemedText.DeprecatedMediumHeader textAlign=\"center\">{formatTickPrice({\n    price: priceLower,\n    atLimit: tickAtLimit,\n    direction: Bound.LOWER,\n    numberType: NumberType.TokenTx\n  })}</ThemedText.DeprecatedMediumHeader><ExtentsText>{\" \"}<Trans\n    i18nKey=\"common.feesEarnedPerBase\"\n    values={{ symbolA: currencyQuote?.symbol, symbolB: currencyBase?.symbol }}\n  /></ExtentsText>{inRange && <Text fontSize={11} color=\"$neutral3\"><Trans i18nKey=\"pool.position.100\" /></Text>}</AutoColumn></LightCard><DoubleArrow>⟷</DoubleArrow><LightCard padding=\"12px\" width=\"100%\"><AutoColumn gap=\"sm\" justify=\"center\"><ExtentsText><Trans i18nKey=\"pool.maxPrice\" /></ExtentsText><ThemedText.DeprecatedMediumHeader textAlign=\"center\">{formatTickPrice({\n    price: priceUpper,\n    atLimit: tickAtLimit,\n    direction: Bound.UPPER,\n    numberType: NumberType.TokenTx\n  })}</ThemedText.DeprecatedMediumHeader><ExtentsText>{\" \"}<Trans\n    i18nKey=\"common.feesEarnedPerBase\"\n    values={{ symbolA: currencyQuote?.symbol, symbolB: currencyBase?.symbol }}\n  /></ExtentsText>{inRange && <Text fontSize={11} color=\"$neutral3\"><Trans i18nKey=\"pool.position.100.at\" values={{ symbol: currencyQuote?.symbol }} /></Text>}</AutoColumn></LightCard></RowBetween><CurrentPriceCard\n    inverted={inverted}\n    pool={pool}\n    currencyQuote={currencyQuote}\n    currencyBase={currencyBase}\n  /></AutoColumn></DarkCard></AutoColumn></PageWrapper><SwitchLocaleLink /></></Trace>;\n}\n"],"names":["getSnapshot","src","canvas","targetHeight","context","getContext","width","height","ratio","Math","round","devicePixelRatio","style","scale","clearRect","drawImage","NFTGrid","styled","div","NFTCanvas","NFTImage","img","PositionNFT","image","animate","setAnimate","useState","canvasRef","useRef","imageRef","onMouseEnter","onMouseLeave","current","ref","hidden","onLoad","ToggleWrapper","button","theme","surface2","surface3","ToggleElement","span","isActive","surface1","neutral1","neutral3","fontSize","neutral2","RateToggle","currencyA","currencyB","handleRateToggle","tokenA","wrapped","tokenB","isSorted","sortsBefore","display","alignItems","onClick","symbol","STARTS_WITH","usePositionTokenURI","tokenId","chainId","version","contract","v3Contract","useV3NFTPositionManagerContract","v4Contract","useV4NFTPositionManagerContract","ProtocolVersion","V3","useNFTPositionManagerContract","data","isLoading","error","useQuery","queryKey","queryFn","input","BigNumber","toHexString","toString","tokenURI","useMemo","valid","loading","startsWith","result","JSON","parse","atob","slice","length","error2","MAX_UINT128","from","pow","sub","useV3PositionFees","pool","asWETH","useSingleCallResult","positionManager","owner","tokenIdHexString","latestBlockNumber","useBlockNumber","amounts","setAmounts","useEffect","getFees","results","callStatic","collect","recipient","amount0Max","amount1Max","amount0","amount1","CurrencyAmount","fromRawAmount","token0","unwrappedToken","token1","useV3PositionsFromTokenIds","tokenIds","positions","inputs","map","useSingleContractMultipleData","some","loading2","call","i","fee","feeGrowthInside0LastX128","feeGrowthInside1LastX128","liquidity","nonce","operator","tickLower","tickUpper","tokensOwed0","tokensOwed1","position","useV3PositionFromTokenId","useV3Positions","account","balanceResult","balanceLoading","accountBalance","toNumber","tokenIdsArgs","tokenRequests","push","tokenIdResults","someTokenIdsLoading","filter","positionsLoading","PositionPageButtonPrimary","ButtonPrimary","PageWrapper","breakpoint","md","sm","BadgeText","Label","end","props","ThemedText","DeprecatedLabel","ExtentsText","HoverText","DeprecatedMain","DoubleArrow","ResponsiveRow","RowBetween","ActionButtonResponsiveRow","ResponsiveButtonConfirmed","ButtonConfirmed","StyledPoolLink","Link","ClickableStyle","PairHeader","H1Medium","CurrentPriceCard","inverted","currencyQuote","currencyBase","formatPrice","useFormatter","LightCard","padding","AutoColumn","gap","justify","Trans","i18nKey","DeprecatedMediumHeader","textAlign","price","token1Price","token0Price","type","NumberType","TokenTx","values","symbolA","symbolB","TokenLink","children","address","tokenLink","getTokenDetailsURL","chain","toGraphQLChain","StyledRouterLink","to","ExternalTokenLink","ExternalLink","href","getExplorerLink","ExplorerDataType","TOKEN","LinkedCurrency","currency","supportedChain","useSupportedChainId","Link2","isGqlSupportedChain","RowFixed","CurrencyLogo","size","marginRight","useInverter","priceLower","priceUpper","quote","base","invert","PositionPageUnsupportedContent","flexDirection","HeadlineLarge","marginBottom","BodyPrimary","as","PositionPage","useAccount","useIsSupportedChainId","PositionPageContent","PositionLabelRow","flexWrap","positionDetails","feeValue0","feeValue1","fiatValueOfLiquidity","fiatValueOfFees","feeValueUpper","feeValueLower","trace","useTrace","tokenIdFromUrl","useParams","signer","useEthersSigner","useTheme","formatCurrencyAmount","formatDelta","formatTickPrice","defaultChainId","useEnabledChains","parsedTokenId","parseTokenId","token0Address","token1Address","feeAmount","removed","eq","metadata","useToken","currency0","currency1","receiveWETH","setReceiveWETH","nativeWrappedSymbol","useNativeCurrency","poolAddress","Pool","getAddress","poolState","usePool","Position","tickAtLimit","useIsTickAtLimit","pricesFromPosition","getPriceOrderingFromPositionForUI","manuallyInverted","setManuallyInverted","equals","lower","upper","greaterThan","lessThan","a","Number","parseFloat","toSignificant","b","c","floor","sqrt","Error","getRatio","currency0ForFeeCollectionPurposes","currency1ForFeeCollectionPurposes","collecting","setCollecting","collectMigrationHash","setCollectMigrationHash","isCollectPending","useIsTransactionPending","showConfirm","setShowConfirm","price0","useUSDCPrice","price1","feeValue0Wrapped","feeValue1Wrapped","add","addTransaction","useTransactionAdder","useCallback","status","calldata","value","NonfungiblePositionManager","collectCallParameters","expectedCurrencyOwed0","expectedCurrencyOwed1","txn","connectedChainId","getChainId","WrongChainError","estimateGas","then","estimate","newTxn","gasLimit","calculateGasMargin","sendTransaction","response","hash","sendAnalyticsEvent","LiquidityEventName","COLLECT_LIQUIDITY_SUBMITTED","transaction_hash","getLPBaseAnalyticsProperties","poolId","currency0AmountUsd","currency1AmountUsd","TransactionType","COLLECT_FEES","currencyId0","currencyId","currencyId1","quotient","toExact","catch","logger","tags","file","function","ownsNFT","below","tickCurrent","above","inRange","modalHeader","marginTop","amount","Text","fontStyle","color","data-testid","showCollectAsWeth","Boolean","isNative","PoolState","LOADING","LoadingRows","Trace","logImpression","page","InterfacePageName","POOL_PAGE","Helmet","title","t","quoteSymbol","baseSymbol","TransactionConfirmationModal","isOpen","onDismiss","attemptingTxn","reviewContent","ConfirmationModalContent","topContent","pendingText","data-cy","textDecoration","DoubleCurrencyLogo","currencies","getPoolDetailsURL","Badge","Percent","RangeBadge","ButtonGray","$borderRadius","SmallButtonPrimary","align","HideSmall","DarkCard","justifyContent","minWidth","ADDRESS","overflow","LoadingFullscreen","Fraction","DeprecatedLargeHeader","fontWeight","FiatTokenPrice","UniverseChainId","Mainnet","marginLeft","success","disabled","confirmed","borderRadius","Dots","white","Switch","id","checked","onCheckedChange","receiveWETH2","variant","HideExtraSmall","atLimit","direction","Bound","LOWER","numberType","UPPER","SwitchLocaleLink"],"sourceRoot":""}